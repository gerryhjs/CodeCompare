如今随着信息技术的发展，代码结构复杂度的提高，代码工程的查重难度越来越高。现代信息技术的查重工具大部分面向文本查重，代码查重工具也大多基于文本查重比较算法。本研究主要问题是设计基于机器学习的Java代码深度查重系统，在已有查重技术的基础上进行优化和问题适应性改进，加入图论知识对代码结构进行进一步的分析，最终达到代码深度查重模块功能的实现。
本研究主要基于机器学习技术，利用图论知识对代码的代码文本和结构进行深度分析查重并支持代码结构优化。本系统主要面向java代码工程或其他有较为复杂调用关系的面向对象语言工程，代码存在的拓扑结构可量化为有向图，设计针对代码工程的图论算法。本模型支持使用机器学习对目标样本进行调参，提高代码结构查重的精确度。有向图比较算法基于图论技术已有研究改进，对于图同构的模型进行优化得到适合代码结构查重的有向图比较算法。对于代码量化有向图利用同构点之间的连接信息计算同构边信息相似程度，最后得到两张有向图的结构近似度作为两个代码文件的近似度，结构查重的算法引入在算法验证中证实比字符串查重提高了精确度。
基于机器学习的Java代码深度查重系统拥有完善的模块功能。从模型的预调参训练，到代码的导入过滤，再到代码量化为图结构执行图论技术算法，最后得出结果，所有过程均为系统自动完成实现；甚至支持使用网页爬虫得到在线的数据样本集。本文得到的模型和研究使用的算法能够对现实中学校教学、企业工作等环节中产生的代码成果进行查重验证，具有较强的适用性和较高的查重精确度。

Nowadays, with the development of information technology and the complexity of code structure, the difficulty of checking the code engineering is getting higher and higher. Most of the information technology tools of modern information technology are oriented to text check, and code check tools are mostly based on text check and comparison algorithms. The main problem of this research is to design a Java code deep check system based on machine learning. Based on the existing check technology, the optimization and problem adaptability are improved. The knowledge of graph theory is added to further analyze the code structure, and finally reach the code depth. Check the implementation of the module function.
This research is mainly based on machine learning technology, using graph theory knowledge to deeply analyze the code text and structure of the code and support code structure optimization. This system is mainly oriented to Java code engineering or other object-oriented language engineering with more complex calling relationships. The topology of code existence can be quantified as directed graph, and the graph theory algorithm for code engineering is designed. This model supports the use of machine learning to coordinate the target samples and improve the accuracy of the code structure check. The directed graph comparison algorithm has been improved based on graph theory technology, and the graph isomorphic model is optimized to obtain a directed graph comparison algorithm suitable for code structure check. For the code quantized directed graph, the similarity degree of the isomorphic edge information is calculated by using the connection information between the isomorphic points, and finally the structural approximate degree of the two directed graphs is obtained as the approximation of the two code files, and the algorithm for checking the structure is introduced. Algorithm verification confirms that the accuracy is improved over string checking.
The Java code deep check system based on machine learning has complete module functions. From the pre-adjustment training of the model, to the import and filtering of the code, to the quantification of the code to implement the graph theory technology algorithm, and finally the result, all the processes are automatically completed by the system; even support the use of web crawlers to obtain online data. Sample set. The model and research algorithms obtained in this paper can check and verify the code results generated in the actual school teaching and enterprise work, which has strong applicability and high accuracy.